# -*- coding: utf-8 -*-
"""Language Classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17ws8FGHI23wV4i3JTlVEluH9PZi7i1Hq
"""

import numpy as np
import string
import pandas as pd
import pickle

from sklearn.naive_bayes import MultinomialNB
from sklearn.feature_extraction.text import CountVectorizer

dataset = pd.read_csv('/content/drive/My Drive/ai/dataset.csv')

from google.colab import drive
drive.mount('/content/drive')

languages = list(set(dataset['language']))
data_raw = dict()
a = dataset.groupby('language')
for l in languages:
    d = a.get_group(l)
    d.drop('language',axis=1,inplace=True)
    t = d.Text.str.cat(sep="\n")
    t = t.split('\n')
    data_raw[l] = t

def show_statistics(data):
    for language, sentences in data.items():
        
        word_list = ' '.join(sentences).split()
        number_of_sentences = len(sentences)
        number_of_words = len(word_list)
        number_of_unique_words = len(set(word_list))
        sample_extract = " ".join(sentences[0].split()[0:7])
        
        print(f'Language: {language}')
        print('-----------------------')
        print(f'Number of sentences\t:\t {number_of_sentences}')
        print(f'Number of words\t\t:\t {number_of_words}')
        print(f'Number of unique words\t:\t {number_of_unique_words}')
        print(f'Sample extract\t\t:\t {sample_extract}...\n')

show_statistics(data_raw)

def preprocess(text):   
    preprocessed_text = text.lower().replace('-', ' ')
    
    translation_table = str.maketrans('\n', ' ', string.punctuation+string.digits)
    
    preprocessed_text = preprocessed_text.translate(translation_table)
        
    return preprocessed_text

data_preprocessed = {k: [preprocess(sentence) for sentence in v] for k, v in data_raw.items()}

show_statistics(data_preprocessed)

sentences_train, y_train = [], []

for k, v in data_preprocessed.items():
    for sentence in v:
        sentences_train.append(sentence)
        y_train.append(k)

vectorizer = CountVectorizer()

X_train = vectorizer.fit_transform(sentences_train)

naive_classifier = MultinomialNB(alpha=0.0001,fit_prior=False)
naive_classifier.fit(X_train, y_train)



text = 'मेरा नाम है श्रेयश देशपांडे '
text = preprocess(text)
text = [text]
text_v = vectorizer.transform(text)
print(naive_classifier.predict(text_v))

pickle.dump(naive_classifier, open('naive_classifier.pkl', 'wb'))
pickle.dump(vectorizer,open('vectorizer.pkl','wb'))